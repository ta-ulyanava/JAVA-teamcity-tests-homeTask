package com.example.teamcity.api.generators;

import org.apache.commons.lang3.RandomStringUtils;

import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
public final class RandomData {
    private static final String TEST_PREFIX = "test_";
    private static final int MAX_LENGTH = 10;
    private static final Random RANDOM = new Random();

    // üîπ –°—Ç—Ä–æ–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    private static final String SPECIAL_CHARACTERS = "!@#$%^&*()_+-={}[]:\\";
    private static final String LOCALIZATION_CHARACTERS = "√§√∂√º√ü√©√®√±√ß√∏œÄ–¥—ë–∂Êº¢Â≠óÊó•Êú¨Ë™ûÌïúÍ∏Ä";

    private static final List<String> LOCALIZATION_STRINGS = List.of(
            "M√ºnchen", "Âåó‰∫¨", "–ú–æ—Å–∫–≤–∞", "Espa√±ol", "S√£o Paulo", "Êù±‰∫¨", "ŸÅÿßÿ±ÿ≥€å", "‡§®‡§Æ‡§∏‡•ç‡§§‡•á", "ÌïúÍµ≠Ïñ¥", "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©"
    );

    private RandomData() {}

    // üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    public static String getString() {
        return TEST_PREFIX + RandomStringUtils.randomAlphanumeric(MAX_LENGTH);
    }

    public static String getString(int length) {
        return TEST_PREFIX + RandomStringUtils.randomAlphanumeric(Math.max(length - TEST_PREFIX.length(), 1));
    }

    // üîπ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
    public static String getFullSpecialCharacterString() {
        return TEST_PREFIX + SPECIAL_CHARACTERS;
    }

    // üîπ –ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –ø–æ –æ–¥–Ω–æ–º—É (–¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤)
    public static List<String> getAllSpecialCharacters() {
        return SPECIAL_CHARACTERS.chars()
                .mapToObj(c -> String.valueOf((char) c))
                .collect(Collectors.toList());
    }

    // üîπ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–æ –≤—Å–µ–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    public static String getFullLocalizationString() {
        return TEST_PREFIX + LOCALIZATION_CHARACTERS;
    }


    // üîπ –ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ –æ–¥–Ω–æ–º—É
    public static List<String> getAllLocalizationCharacters() {
        return LOCALIZATION_CHARACTERS.chars()
                .mapToObj(c -> String.valueOf((char) c))
                .collect(Collectors.toList());
    }

}
